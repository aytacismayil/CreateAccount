{"ast":null,"code":"var _jsxFileName = \"/home/aytac/Documents/CreateAccount/src/CreateAccount.js\";\nimport React, { useState, Component } from \"react\";\nimport \"./CreateAccount.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nconst togglePassword = () => {\n  setPasswordShown(!passwordShown);\n};\n\nconst formValid = ({\n  formErrors,\n  ...rest\n}) => {\n  let valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nclass CreateAccount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state)) {\n        alert('successfully');\n        console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.firstName}       \n        Email: ${this.state.email}\n        Password: ${this.state.password}\n      `);\n      } else {\n        console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n      }\n    };\n\n    this.handleChange = e => {\n      e.preventDefault();\n      const {\n        name,\n        value\n      } = e.target;\n      let formErrors = { ...this.state.formErrors\n      };\n\n      switch (name) {\n        case \"firstName\":\n          formErrors.firstName = value.length < 5 ? \"Minimum 5 characters\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"Please enter a valid email address\";\n          break;\n\n        case \"password\":\n          formErrors.password = value.length < 8 ? \"Minimum 8 characters\" : \"\";\n          break;\n\n        case \"describe\":\n          formErrors.describe = value === \"none\" ? \"Select\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      this.setState({\n        formErrors,\n        [name]: value\n      }, () => this.state);\n      console.log(value, ':', this.state);\n\n      if (this.state.firstName == null) {\n        this.setState({\n          isLocked: false\n        });\n      } else if (this.state.email == null) {\n        this.setState({\n          isLocked: false\n        });\n      } else if (this.state.password == null) {\n        this.setState({\n          isLocked: false\n        });\n      } else if (value === \"\" || value === \"undefined\") {\n        this.setState({\n          isLocked: false\n        });\n      } else {\n        this.setState({\n          isLocked: true\n        });\n      }\n\n      ;\n    };\n\n    this.state = {\n      firstName: null,\n      email: null,\n      password: null,\n      describe: null,\n      formErrors: {\n        firstName: \"\",\n        email: \"\",\n        password: \"\"\n      },\n      isLocked: false\n    };\n  }\n\n  render() {\n    const {\n      formErrors\n    } = this.state;\n    const lockedStyle = {\n      backgroundColor: \"#286EFA\",\n      border: '1px solid #286EFA',\n      color: \"#FFFFFF\"\n    };\n    const unlockedStyle = {};\n    const [passwordShown, setPasswordShown] = useState(false);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.handleSubmit,\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_group firstName\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: formErrors.firstName.length > 0 ? \"error\" : null // placeholder=\"First Name\"\n              ,\n              type: \"text\",\n              name: \"firstName\",\n              noValidate: true,\n              required: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"firstName\",\n              className: formErrors.firstName.length > 0 ? \"error\" : null,\n              children: \"Your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), formErrors.firstName.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.firstName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_group email\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: formErrors.email.length > 0 ? \"error\" : null // placeholder=\"Email\"\n              ,\n              type: \"email\",\n              name: \"email\",\n              noValidate: true,\n              required: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: formErrors.email.length > 0 ? \"error\" : null,\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 16\n            }, this), formErrors.email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"firstName describe\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"describe\",\n              onChange: this.handleChange,\n              id: \"selectBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"none\",\n                children: \"I would describe my user type as\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"developer\",\n                children: \"Developer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"design\",\n                children: \"Design\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input_group password\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: togglePassword,\n              children: \"Show Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: formErrors.password.length > 0 ? \"error\" : null // placeholder=\"Password\"\n              ,\n              type: passwordShown ? \"text\" : \"password\",\n              name: \"password\",\n              required: true,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: formErrors.password.length > 0 ? \"error\" : null,\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), formErrors.password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"errorMessage\",\n              children: formErrors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"createAccount\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              style: this.state.isLocked ? lockedStyle : unlockedStyle,\n              type: \"submit\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CreateAccount;","map":{"version":3,"sources":["/home/aytac/Documents/CreateAccount/src/CreateAccount.js"],"names":["React","useState","Component","emailRegex","RegExp","togglePassword","setPasswordShown","passwordShown","formValid","formErrors","rest","valid","Object","values","forEach","val","length","CreateAccount","constructor","props","handleSubmit","e","preventDefault","state","alert","console","log","firstName","email","password","error","handleChange","name","value","target","test","describe","setState","isLocked","render","lockedStyle","backgroundColor","border","color","unlockedStyle"],"mappings":"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","sourcesContent":["import React, { useState,Component} from \"react\";\nimport \"./CreateAccount.css\";\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\n\nconst togglePassword = () => { \n  setPasswordShown(!passwordShown);\n};\n\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\nclass CreateAccount extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      firstName: null,    \n      email: null,\n      password: null,\n      describe: null,\n      formErrors: {\n        firstName: \"\",        \n        email: \"\",\n        password: \"\"\n      },\n      isLocked: false\n    };\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    if (formValid(this.state)) {\n      alert('successfully')\n      console.log(`\n        --SUBMITTING--\n        First Name: ${this.state.firstName}       \n        Email: ${this.state.email}\n        Password: ${this.state.password}\n      `);\n    } else {\n      console.error(\"FORM INVALID - DISPLAY ERROR MESSAGE\");\n    }\n  };\n\n  handleChange = e => {\n    e.preventDefault();\n    const { name, value } = e.target;\n    let formErrors = { ...this.state.formErrors };\n    switch (name) {\n      case \"firstName\":\n        formErrors.firstName =\n          value.length < 5 ? \"Minimum 5 characters\" : \"\";\n        break;\n     \n      case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"Please enter a valid email address\";\n        break;\n      case \"password\":\n        formErrors.password =\n          value.length < 8 ? \"Minimum 8 characters\" : \"\";\n        break;\n      case \"describe\":\n        formErrors.describe = \n          value === \"none\" ? \"Select\": \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value }, () => this.state);\n    console.log(value, ':', this.state)\n    if (this.state.firstName == null ){\n      this.setState({isLocked: false});\n    }\n    else if (this.state.email == null){\n      this.setState({isLocked: false});\n    }\n    else if (this.state.password == null){\n      this.setState({isLocked: false});\n    }\n    else if (value === \"\" || value === \"undefined\"){\n      this.setState({isLocked: false});\n    }\n    else{\n      this.setState({isLocked: true});\n    };\n  };\n\n  render() {\n    \n    const { formErrors } = this.state;\n    const lockedStyle = {\n      backgroundColor: \"#286EFA\",\n      border: '1px solid #286EFA', \n      color: \"#FFFFFF\",\n    };\n\n    const unlockedStyle = {        \n    };\n\n    const [passwordShown, setPasswordShown] = useState(false);\n    \n    return (\n\n      <div className=\"wrapper\">\n        <div className=\"form-wrapper\">\n         \n          <form onSubmit={this.handleSubmit} noValidate>\n            <div className=\"input_group firstName\">\n            \n              <input\n                className= {formErrors.firstName.length > 0 ? \"error\" : null}\n                // placeholder=\"First Name\"\n                type=\"text\"\n                name=\"firstName\"\n                noValidate\n                required\n                onChange={this.handleChange}\n              />\n                <label htmlFor=\"firstName\" className={formErrors.firstName.length > 0 ? \"error\" : null}>Your name</label>\n              {formErrors.firstName.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.firstName}</span>\n              )}\n            </div>\n            <div className=\"input_group email\">\n             \n              <input\n                className={formErrors.email.length > 0 ? \"error\" : null}\n                // placeholder=\"Email\"\n                type=\"email\"\n                name=\"email\"\n                noValidate\n                required\n                onChange={this.handleChange}\n              />\n               <label htmlFor=\"email\" className={formErrors.email.length > 0 ? \"error\" : null}>Email address</label>\n              {formErrors.email.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.email}</span>\n              )}\n            </div>\n\n            <div className=\"firstName describe\">          \n               <select name=\"describe\" onChange={this.handleChange} id=\"selectBox\">   \n                  <option value=\"none\">I would describe my user type as</option>\n                  <option value=\"developer\">Developer</option>\n                  <option value=\"design\">Design</option>\n               </select>\n            </div>        \n           \n            <div className=\"input_group password\">\n            <button onClick={togglePassword}>Show Password</button>\n              <input\n                className={formErrors.password.length > 0 ? \"error\" : null}\n                // placeholder=\"Password\"\n                type={passwordShown ? \"text\" : \"password\"}\n                name=\"password\"\n                \n                required\n                onChange={this.handleChange}\n              />\n              <label htmlFor=\"password\" className={formErrors.password.length > 0 ? \"error\" : null}>Password</label>\n              {formErrors.password.length > 0 && (\n                <span className=\"errorMessage\">{formErrors.password}</span>\n              )}\n            </div>\n            <div className=\"createAccount\">\n              {/* {console.log(this.state.isLocked)} */}\n              <button style={this.state.isLocked ? lockedStyle : unlockedStyle} type=\"submit\">Next</button>\n             \n            </div>\n          </form>\n        </div>\n      </div>\n    \n     \n    );\n  }\n}\n\nexport default CreateAccount;"]},"metadata":{},"sourceType":"module"}